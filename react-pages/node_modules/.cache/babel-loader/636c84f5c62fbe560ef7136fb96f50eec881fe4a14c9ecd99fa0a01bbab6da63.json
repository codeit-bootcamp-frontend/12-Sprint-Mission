{"ast":null,"code":"var _jsxFileName = \"/Users/seokchanlee/Dev/codeit/sprint_mission1/12-Sprint-Mission/react-pages/src/pages/items/PandaBestList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ItemCard from \"./ItemCard\";\nimport { getItems } from \"../api/ItemApi\"; // API를 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PandaBestList() {\n  _s();\n  const [bestItems, setBestItems] = useState([]);\n  useEffect(() => {\n    async function fetchItems() {\n      try {\n        const items = await getItems(); // API에서 데이터 가져오기\n        // favoriteCount 기준으로 내림차순 정렬\n        const sortedItems = items.sort((a, b) => b.favoriteCount - a.favoriteCount);\n        setBestItems(sortedItems.slice(0, 4)); // 상위 4개만 설정\n      } catch (error) {\n        console.error(\"Failed to fetch items:\", error);\n      }\n    }\n    fetchItems();\n  }, []); // 컴포넌트가 마운트될 때만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bestList-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"category\",\n      children: \"\\uBCA0\\uC2A4\\uD2B8 \\uC0C1\\uD488\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bestList\",\n      children: bestItems.map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(PandaBestList, \"0dQU7PhhcRAiiu4g//neJzScNMw=\");\n_c = PandaBestList;\nexport default PandaBestList;\nvar _c;\n$RefreshReg$(_c, \"PandaBestList\");","map":{"version":3,"names":["React","useEffect","useState","ItemCard","getItems","jsxDEV","_jsxDEV","PandaBestList","_s","bestItems","setBestItems","fetchItems","items","sortedItems","sort","a","b","favoriteCount","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","_c","$RefreshReg$"],"sources":["/Users/seokchanlee/Dev/codeit/sprint_mission1/12-Sprint-Mission/react-pages/src/pages/items/PandaBestList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ItemCard from \"./ItemCard\";\nimport { getItems } from \"../api/ItemApi\"; // API를 import\n\nfunction PandaBestList() {\n  const [bestItems, setBestItems] = useState([]);\n\n  useEffect(() => {\n    async function fetchItems() {\n      try {\n        const items = await getItems(); // API에서 데이터 가져오기\n        // favoriteCount 기준으로 내림차순 정렬\n        const sortedItems = items.sort(\n          (a, b) => b.favoriteCount - a.favoriteCount\n        );\n        setBestItems(sortedItems.slice(0, 4)); // 상위 4개만 설정\n      } catch (error) {\n        console.error(\"Failed to fetch items:\", error);\n      }\n    }\n\n    fetchItems();\n  }, []); // 컴포넌트가 마운트될 때만 실행\n\n  return (\n    <div className=\"bestList-container\">\n      <h2 className=\"category\">베스트 상품</h2>\n      <div className=\"bestList\">\n        {bestItems.map((item) => (\n          <ItemCard key={item.id} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PandaBestList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,eAAeU,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChC;QACA,MAAMS,WAAW,GAAGD,KAAK,CAACE,IAAI,CAC5B,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,aAAa,GAAGF,CAAC,CAACE,aAChC,CAAC;QACDP,YAAY,CAACG,WAAW,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;IAEAR,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKe,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjChB,OAAA;MAAIe,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCpB,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBb,SAAS,CAACkB,GAAG,CAAEC,IAAI,iBAClBtB,OAAA,CAACH,QAAQ;QAAeyB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CA9BQD,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAgCtB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}