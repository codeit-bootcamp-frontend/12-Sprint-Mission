{"ast":null,"code":"var _jsxFileName = \"/Users/seokchanlee/Dev/codeit/sprint_mission1/12-Sprint-Mission/react-pages/src/pages/items/PandaAllList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ItemCard from \"./ItemCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PandaAllList({\n  items\n}) {\n  _s();\n  const [sortType, setSortType] = useState(\"newest\");\n  const sortedItems = [...items].sort((a, b) => {\n    if (sortType === \"newest\") {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    }\n    if (sortType === \"favorite\") {\n      return b.favoriteCount - a.favoriteCount;\n    }\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\uC804\\uCCB4 \\uC0C1\\uD488\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9\\uD560 \\uC0C1\\uD488\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uC0C1\\uD488 \\uB4F1\\uB85D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sortDropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sortSelect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"sortSelect\",\n            value: sortType,\n            onChange: e => setSortType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"newest\",\n              children: \"\\uCD5C\\uC2E0\\uC21C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"favorite\",\n              children: \"\\uC88B\\uC544\\uC694\\uC21C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allList\",\n      children: sortedItems.slice(0, 10).map(item => /*#__PURE__*/_jsxDEV(ItemCard, {\n        item: item,\n        imgSizeClass: \"allImg\"\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(PandaAllList, \"P4Xnu2cdp3MWdY9MXX02sdXLiFY=\");\n_c = PandaAllList;\nexport default PandaAllList;\nvar _c;\n$RefreshReg$(_c, \"PandaAllList\");","map":{"version":3,"names":["React","useState","ItemCard","jsxDEV","_jsxDEV","PandaAllList","items","_s","sortType","setSortType","sortedItems","sort","a","b","Date","createdAt","favoriteCount","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","htmlFor","id","value","onChange","e","target","slice","map","item","imgSizeClass","_c","$RefreshReg$"],"sources":["/Users/seokchanlee/Dev/codeit/sprint_mission1/12-Sprint-Mission/react-pages/src/pages/items/PandaAllList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ItemCard from \"./ItemCard\";\n\nfunction PandaAllList({ items }) {\n  const [sortType, setSortType] = useState(\"newest\");\n\n  const sortedItems = [...items].sort((a, b) => {\n    if (sortType === \"newest\") {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    }\n    if (sortType === \"favorite\") {\n      return b.favoriteCount - a.favoriteCount;\n    }\n    return 0;\n  });\n\n  return (\n    <div>\n      <div className=\"titleList\">\n        <h2 className=\"title\">전체 상품</h2>\n        <div>\n          <input type=\"text\" placeholder=\"검색할 상품을 입력해주세요\" />\n          <button>상품 등록하기</button>\n          <div className=\"sortDropdown\">\n            <label htmlFor=\"sortSelect\"></label>\n            <select\n              id=\"sortSelect\"\n              value={sortType}\n              onChange={(e) => setSortType(e.target.value)}\n            >\n              <option value=\"newest\">최신순</option>\n              <option value=\"favorite\">좋아요순</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div className=\"allList\">\n        {sortedItems.slice(0, 10).map((item) => (\n          <ItemCard key={item.id} item={item} imgSizeClass=\"allImg\" />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default PandaAllList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}